:root {
  {% if request.user.foreground_color %}
    --fg: {{ request.user.foreground_color }};
  {% else %}
    --fg: #111;
  {% endif %}

  {% if request.user.background_color %}
    --bg: {{ request.user.background_color }};
  {% else %}
    --bg: #eee;
  {% endif %}
  --line-thickness: 0.1rem;
}

@media (prefers-color-scheme: dark) {
  :root {
    {% if request.user.foreground_color %}
      --fg: {{ request.user.foreground_color }};
    {% else %}
      --fg: #eee;
    {% endif %}

    {% if request.user.background_color %}
      --bg: {{ request.user.background_color }};
    {% else %}
      --bg: #333;
    {% endif %}
  }
}

html {
  font-size: 125%;
  box-sizing: border-box;
}

*, ::after, ::before {
  box-sizing: inherit;
  text-decoration-thickness: var(--line-thickness);

  color: var(--fg);
  background: var(--bg);

  position: relative;
  margin: 0;
  padding: 0;
  letter-spacing: 0.04rem;
  word-spacing: 0.06rem;
}

h1, h2, h3 {
  font-family: 'Roboto Serif', serif;
  letter-spacing: normal;
  word-spacing: normal;
}

p {
  /*
   * TODO
   * The following styles set the line height, which creates padding on either
   * side of each line of text. This creates a de-facto margin at the top and
   * bottom of text, which is not what we want. What we want is spacing
   * between lines. The following proposed CSS features will probably fix this,
   * but are not supported by browsers yet:
   *
   * text-box-edge: cap alphabetic;
   * text-box-trim: both;
   *
   * Until this is supported, we are using a negative margin on the top/bottom
   * of text elements to achieve this.
   */
  background: transparent;
  line-height: 2;
  margin-top: -0.65rem;
  margin-bottom: -0.4rem;
}

.text {
  display: flex;
  flex-direction: column;
  gap: 2rem;

  & ol, & ul {
    gap: 1.8rem;

    & > li {
      background: transparent;
      line-height: 2;
      margin-top: -0.65rem;
      margin-bottom: -0.4rem;
    }
  }
}

img {
  max-width: 100%;
  height: auto; /* relative to width */
}

a.as-button,
a:link.as-button,
a:visited.as-button,
button,
input[type='button'],
input[type='reset'],
input[type='submit'] {
  display: inline-flex;
  padding: 0.15rem 0.6rem 0.3rem 0.6rem;
  font-family: 'Roboto Slab';
  font-size: 1rem;
  font-weight: normal;

  background: var(--bg);
  color: var(--fg);

  border: var(--line-thickness) solid var(--fg);
  border-radius: 0.6rem;

  cursor: pointer;
  text-decoration: none;
  transition: transform 0.2s ease-in-out;
  transform-origin: center;
}

a.as-button:hover,
a:link.as-button:hover,
a:visited.as-button:hover,
button:hover,
input[type='button']:hover,
input[type='reset']:hover,
input[type='submit']:hover {
  transform: scale(1.1);
  z-index: 1;
}

@keyframes button-wiggle {
  0%  { transform: scale(1.1) skewX(0); }
  75% { transform: scale(1.1) skewX(0); }
  80% { transform: scale(1.1) skewX(15deg); }
  85% { transform: scale(1.1) skewX(-15deg); }
  90% { transform: scale(1.1) skewX(15deg); }
  95% { transform: scale(1.1) skewX(-15deg); }
}

a.as-button:focus,
a:link.as-button:focus,
a:visited.as-button:focus,
button:focus,
input[type='button']:focus,
input[type='reset']:focus,
input[type='submit']:focus {
  outline: none;
  animation: button-wiggle 3s linear infinite;
  z-index: 1;
}

button:disabled,
input[type='button']:disabled,
input[type='reset']:disabled,
input[type='submit']:disabled {
  border-style: dashed;
  cursor: not-allowed;
}

button:disabled:hover,
input[type='button']:disabled:hover,
input[type='reset']:disabled:hover,
input[type='submit']:disabled:hover {
  transform: none;
}

input[type='email'],
input[type='number'],
input[type='password'],
input[type='search'],
input[type='tel'],
input[type='text'],
input[type='url'],
textarea,
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: none;
  box-sizing: inherit;
  padding: .2rem .3rem;
  width: 100%;
  color: var(--fg);
  background-color: var(--bg);
  border: var(--line-thickness) solid var(--fg);
  border-radius: 0;
  font-family: 'Roboto Mono';
  font-size: 0.9rem;
}

input[type='email'],
input[type='number'],
input[type='password'],
input[type='search'],
input[type='tel'],
input[type='text'],
input[type='url'],
select {
  width: 20rem;
}

textarea {
  width: 25rem;
  height: 5rem;
}

input[type='checkbox'],
input[type='checkbox']:checked {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
  border: var(--line-thickness) solid var(--fg);
  background: var(--bg);
  width: 1rem;
  height: 1rem;
}

@keyframes checkbox-wiggle {
  0%  { transform: scale(1.2) skewX(0); }
  75% { transform: scale(1.2) skewX(0); }
  80% { transform: scale(1.2) skewX(15deg); }
  85% { transform: scale(1.2) skewX(-15deg); }
  90% { transform: scale(1.2) skewX(15deg); }
  95% { transform: scale(1.2) skewX(-15deg); }
}

input[type='checkbox']:focus {
  animation: checkbox-wiggle 3s linear infinite;
  transform-origin: center;
}

{% if request.user.foreground_color %}
  input[type='checkbox']:checked {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path d='M13.333 4 6 11.333 l -3.333 -3.333' stroke-linecap='round' stroke='{{ request.user.foreground_color|urlencode }}' stroke-width='2.5'/></svg>");
  }
{% else %}
  input[type='checkbox']:checked {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path d='M13.333 4 6 11.333 l -3.333 -3.333' stroke-linecap='round' stroke='%23111' stroke-width='2.5'/></svg>");
  }

  @media (prefers-color-scheme: dark) {
    input[type='checkbox']:checked {
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16'><path d='M13.333 4 6 11.333 l -3.333 -3.333' stroke-linecap='round' stroke='%23eee' stroke-width='2.5'/></svg>");
    }
  }
{% endif %}

input::placeholder,
textarea::placeholder {
  color: var(--fg);
  font-style: italic;
  font-weight: light;
  opacity: 1;
}

input,
textarea {
  transform-origin: top left;
  transition: transform 0.2s ease-in-out;
  z-index: 1;
}

input:focus,
textarea:focus {
  outline: none;
  transform: scale(1.15);
  transition: transform 0.2s ease-in-out;
}

fieldset {
  border: var(--line-thickness) solid var(--fg);
  padding: 0.5rem 1.2rem 0.8rem 1.2rem;
  border-radius: 1rem;
}

/* end normalization */

body, footer, header, main, section, div {
  display: flex;
  gap: 1rem;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
}

svg {
  display: block;
}

nav {
  display: flex;
  gap: 1rem;
  flex-direction: row;
  align-items: center;

  &.circle {
    gap: 0.5rem;
  }
}

form {
  display: flex;
  gap: 1rem;
  flex-direction: column;
  align-items: flex-start;
}

form > div {
  display: flex;
  flex-direction: column;
  gap: 0;
}

a,
a:active,
a:link,
a:visited,
button.as-link {
  color: var(--fg);
  padding: 0;
  border: none;
  text-decoration: underline;
  text-decoration-thickness: var(--line-thickness);
  transition: transform 0.2s ease-in-out;
  transform-origin: 50% 70%;
  cursor: pointer;
}

a:focus,
a:hover,
a:active:hover,
a:visited:hover,
button.as-link:hover,
button.as-link:focus {
  transform: scale(1.2);
  z-index: 1;
}

html {
  font-family: 'Roboto Slab';
  flex-direction: column;
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  overflow: scroll;

  & > header {
    background: var(--bg);
    position: sticky;
    z-index: 2;
    top: 0;

    display: flex;
    flex-direction: row;
    align-items: center;

    border-bottom: var(--line-thickness) solid var(--fg);
    padding: 1rem;

    & > svg {
      height: 3rem;
    }
  }

  & > main {
    flex-direction: column;
    margin: 0 auto;
    width: calc(100% - 2rem);
    max-width: 40rem;
  }

  & > footer {
    background: var(--bg);

    flex-direction: row;
    align-items: center;
    justify-content: center;

    width: 100%;
    border-top: var(--line-thickness) solid var(--fg);
    margin-top: auto;
    position: sticky;
    bottom: 0;
    padding: 1rem;
    z-index: 2;
  }
}

#feed {
  .post:not(:first-child) {
    padding-top: 1rem;
    border-top: var(--line-thickness) solid var(--fg);
  }

  .post {
    gap: 0;

    & > date {
      font-size: 16px;
    }

    & > header {
      display: block;
    }
  }
}

@keyframes heartbeat {
  0%    { transform: scale(1.0); }
  50%   { transform: scale(1.0); }
  66%   { transform: scale(1.2); }
  84%   { transform: scale(1.2); }
  100%  { transform: scale(1.0); }
}

#heart {
  gap: 0.5rem;
  &:hover {
    animation: heartbeat 1s ease-in-out infinite;
  }
}

ul {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  & > li {
    margin-left: 1rem;
    list-style-type: square;
  }
}

.helptext {
  font-size: 70%;
  margin-bottom: 0.7rem;
}

.qr-code svg {
  width: 20rem;
  align-self: center;
}

.tab-area {
  gap: 0;

  & > .tab-list {
    padding: 0 1.5rem;

    & > .tab {
      border: var(--line-thickness) solid var(--fg);
      border-radius: 0.5rem 0.5rem 0 0;
      padding: 0.2rem 0.75rem 0.2rem 0.75rem;
      z-index: 1;
      margin-bottom: calc(0px - var(--line-thickness));
    }

    & > .current.tab {
      border-bottom-color: var(--bg);
    }
  }

  & > .panel {
    border: var(--line-thickness) solid var(--fg);
    border-radius: 1rem;
    padding: 2rem;
  }
}

.crop-application {
  overflow: hidden;

  & > img {
    position: absolute;
  }
}
